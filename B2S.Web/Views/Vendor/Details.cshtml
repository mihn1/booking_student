@model B2S.Core.Entities.Vendor

@{
    ViewData["Title"] = "Vendor Details";
    ViewData["Name"] = "Vendor";
    Layout = "~/Views/Shared/_B2SDetails.cshtml";
    ViewData["EntityIcon"] = "fa fa-street-view";
}



<div class="row">
    <div class="col-md-9">
        <!-- Default box -->
        <div class="box box-primary">
            <div class="box-body">
                <div>
                    <dl class="dl-horizontal">
                        <dt>
                            @Html.DisplayNameFor(model => model.VendorName)
                        </dt>
                        <dd>
                            @Html.DisplayFor(model => model.VendorName)
                        </dd>
                        <dt>
                            @Html.DisplayNameFor(model => model.ContactName)
                        </dt>
                        <dd>
                            @Html.DisplayFor(model => model.ContactName)
                        </dd>
                        <dt>
                            @Html.DisplayNameFor(model => model.Phone)
                        </dt>
                        <dd>
                            @Html.DisplayFor(model => model.Phone)
                        </dd>
                        <dt>
                            @Html.DisplayNameFor(model => model.Fax)
                        </dt>
                        <dd>
                            @Html.DisplayFor(model => model.Fax)
                        </dd>
                        <dt>
                            @Html.DisplayNameFor(model => model.Email)
                        </dt>
                        <dd>
                            @Html.DisplayFor(model => model.Email)
                        </dd>
                        <dt>
                            @Html.DisplayNameFor(model => model.Address)
                        </dt>
                        <dd>
                            @Html.DisplayFor(model => model.Address)
                        </dd>
                        <dt>
                            @Html.DisplayNameFor(model => model.City)
                        </dt>
                        <dd>
                            @Html.DisplayFor(model => model.City)
                        </dd>
                        <dt>
                            @Html.DisplayNameFor(model => model.Province)
                        </dt>
                        <dd>
                            @Html.DisplayFor(model => model.Province)
                        </dd>
                        <dt>
                            @Html.DisplayNameFor(model => model.Postcode)
                        </dt>
                        <dd>
                            @Html.DisplayFor(model => model.Postcode)
                        </dd>
                        <dt>
                            @Html.DisplayNameFor(model => model.Country)
                        </dt>
                        <dd>
                            @Html.DisplayFor(model => model.Country)
                        </dd>
                    </dl>
                </div>
            </div>
            <!-- /.box-body -->
            <div class="box-footer">
                <div class="form-group">
                    <a asp-action="Edit" asp-route-id="@Model.VendorId" class="btn btn-primary">Edit</a>
                    <a asp-action="Index" asp-route-id="@Model.VendorId" class="btn btn-default">Back to List</a>
                </div>
            </div>
            <!-- /.box-footer-->
        </div>
        <!-- /.box -->
    </div>
    <div class="col-md-3">
    </div>
</div>


<div class="row">
    <div class="col-md-9">
        <!-- Default box -->
        <div class="box box-primary">
            <div class="box-header with-border">
                <h3 class="box-title">Properties</h3>
                <div class="box-tools pull-right">
                    <button type="button" class="btn btn-box-tool" data-widget="collapse">
                        <i class="fa fa-minus"></i>
                    </button>
                    <button type="button" class="btn btn-box-tool" data-widget="remove"><i class="fa fa-times"></i></button>
                </div>
            </div>
            <div class="box-body">
                <div class="row">
                    <div class="col-lg-12">
                        <table id="grid" name="grid" class="table table-striped table-bordered">
                            <thead>
                                <tr>
                                    <th class="col-lg-4">Property Name</th>
                                    <th class="col-lg-3">Property Type</th>
                                    <th class="col-lg-4">Address</th>
                                    @*<th class="col-lg-1"></th>*@
                                </tr>
                            </thead>
                        </table>
                    </div>
                </div>
            </div>
            <!-- /.box-body -->
            @*<div class="box-footer">
                <div class="form-group">
                    <div class="row">
                        <div class="col-md-12">
                            <a class="btn btn-success" style="margin-bottom:10px" onclick="ShowPopup('@Url.Action("Create","Property", new { masterid = Model.VendorId })')"><i class="fa fa-plus"></i> Add Property</a>
                        </div>
                    </div>
                </div>
            </div>*@
            <!-- /.box-footer-->
        </div>
        <!-- /.box -->
    </div>
</div>

<!--modal placeholder-->
<div class="modal modal-primary fade" id="modalDefault">
    <div class="modal-dialog">
        <div class="modal-content">
        </div>
    </div>
</div>

@section Scripts{
    <script>
        var popup, dataTable
        var entity = 'Property';
        var apiurl = '/api/' + entity;

        $(document).ready(function () {
            dataTable = $('#grid').DataTable({
                "ajax": {
                    "url": apiurl + '?masterid=@Model.VendorId',
                    "type": 'GET',
                    "datatype": 'json'
                },
                "columns": [
                    { "data": "propertyName" },
                    { "data": "propertyType" },
                    { "data": "address"}
                    //{
                    //    "data": "propertyId",
                    //    "render": function (data) {
                    //        var btnEdit = "<a class='btn btn-primary btn-xs' onclick=ShowPopup('/" + entity + "/Create/" + data + "')><i class='fa fa-pencil'></i></a>";
                    //        var btnDelete = "<a class='btn btn-danger btn-xs' style='margin-left:2px' onclick=Delete('/api/" + entity + "/" + data + "')><i class='fa fa-trash'></i></a>";
                    //        return "<div class='tools pull-right'>" + btnEdit + btnDelete + "</div>";
                    //    }
                    //}
                ],
                "language": {
                    "emptyTable": "No data found."
                },
                "lengthChange": false,
                "info": false,
                "searching": false,
                "paging": false,
            });
        })

        // function ShowPopup(url) {         
        //    var modalId = 'modalDefault';
        //    var modalPlaceholder = $('#' + modalId + ' .modal-dialog .modal-content');
        //    $.get(url)
        //        .done(function (response) {
        //            modalPlaceholder.html(response);
        //            popup = $('#' + modalId + '').modal({
        //                keyboard: false,
        //                backdrop: 'static'
        //            });
        //        });
        //}

        //  function SubmitAddEdit(form) {
        //    $.validator.unobtrusive.parse(form);
        //    if ($(form).valid()) {
        //        //need this because of auto generated hidden input for checkbox in asp.net core
        //        var checkedboxes = $(form).find("input[type='checkbox']:checked");
        //        checkedboxes.each(function () {
        //            let name = $(this).attr("name");
        //            $("input[type='hidden'][name='" + name + "']").val('true');
        //        })              
        //        var replacer = function (key, value) { if (value === undefined || value === '') { return null; } return value; };
        //        var data = $(form).serializeJSON();
        //        data = JSON.stringify(data, replacer);
        //        $.ajax({
        //            type: 'POST',
        //            url: apiurl,
        //            data: data,
        //            contentType: 'application/json',
        //            success: function (data) {
        //                if (data.success) {
        //                    popup.modal('hide');
        //                    ShowMessage(data.message);
        //                    dataTable.ajax.reload();
        //                } else {
        //                    ShowMessageError(data.message);
        //                }
        //            }
        //        });
        //    }
        //    return false;
        //}

        //function Delete(url) {
        //    swal({
        //        title: "Are you sure want to Delete?",
        //        text: "You will not be able to restore the data!",
        //        type: "warning",
        //        showCancelButton: true,
        //        confirmButtonColor: "#dd4b39",
        //        confirmButtonText: "Yes, delete it!",
        //        closeOnConfirm: true
        //    }, function () {
        //        $.ajax({
        //            type: 'DELETE',
        //            url: url,
        //            success: function (data) {
        //                if (data.success) {
        //                    ShowMessage(data.message);
        //                    dataTable.ajax.reload();
        //                } else {
        //                    ShowMessageError(data.message);
        //                }
        //            }
        //        });
        //    });
        //}

    </script>
}