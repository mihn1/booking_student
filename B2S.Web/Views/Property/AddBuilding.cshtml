@model B2S.Core.Entities.Building

@{
    Layout = null;
}

@{
    ViewData["Title"] = "AddBuilding";
    Layout = "~/Views/Shared/_B2SPopup.cshtml";
}

<div class="row">
    <div class="col-md-12">
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
        <input type="hidden" asp-for="PropertyId" />
        <input type="hidden" asp-for="BuildingId" />
        <input type="hidden" asp-for="CreatedAt" />
        <input type="hidden" asp-for="CreatedBy" />
        <div class="row">
            <div class="col-md-12">
                <div class="form-group">
                    <label asp-for="Name" class="control-label"></label>
                    <input asp-for="Name" class="form-control" />
                    <span asp-validation-for="Name" class="text-danger"></span>
                </div>
            </div>

        </div>
        <div class="row">
            <div class="col-md-12">
                <div class="form-group">
                    <label asp-for="Description" class="control-label"></label>
                    <textarea asp-for="Description" class="form-control"></textarea>
                    <span asp-validation-for="Description" class="text-danger"></span>
                </div>
            </div>
        </div>
        @if (string.IsNullOrEmpty(Model.BuildingId))
        {
            <div class="form-group">
                <div class="row">
                    <div class="col-md-8">
                        @*<div>
                            <div id="progress" class="progress">
                                <div class="progress-bar progress-bar-success"></div>
                            </div>
                        </div>*@
                    </div>
                    <div class="col-md-4">
                        <div>
                            <span class="btn btn-success fileinput-button">
                                <i class="fa fa-camera bg-green"></i>
                                <span>Upload Image</span>
                                <!-- The file input field used as target for the file upload widget -->
                                <input id="fileupload" type="file" name="files" multiple>
                            </span>
                        </div>

                    </div>
                </div>
            </div>
        }

    </div>
</div>

@if (!string.IsNullOrEmpty(Model.BuildingId))
{
    <div class="row">
        <div class="col-md-12">
            <!-- Default box -->
            <div class="box box-primary">
                <div class="box-header">
                    <h3 class="box-title">Images List</h3>
                    <div class="box-tools pull-right">
                        <button type="button" class="btn btn-box-tool" data-widget="collapse">
                            <i class="fa fa-minus"></i>
                        </button>
                        <button type="button" class="btn btn-box-tool" data-widget="remove"><i class="fa fa-times"></i></button>
                    </div>
                </div>
                <div class="box-body">
                    <div class="row">
                        <div class="col-lg-12">
                            <table id="imageGrid" name="imageGrid" style="width:100%" class="table table-striped table-bordered">
                                <thead>
                                    <tr>
                                        <th class="col-lg-8">Image</th>
                                        <th class="col-lg-2">Is Default</th>
                                        <th class="col-lg-2"></th>
                                    </tr>
                                </thead>
                            </table>
                        </div>
                    </div>
                </div>
                <!-- /.box-body -->
                <div class="box-footer">
                    <div class="form-group">
                        <div class="row">
                            <div class="col-md-8">
                                @*<div>
                                    <div id="progress" class="progress">
                                        <div class="progress-bar progress-bar-success"></div>
                                    </div>
                                </div>*@
                            </div>
                            <div class="col-md-4">
                                <div>
                                    <span class="btn btn-success fileinput-button">
                                        <i class="fa fa-camera bg-green"></i>
                                        <span>Upload Image</span>
                                        <!-- The file input field used as target for the file upload widget -->
                                        <input id="fileupload" type="file" name="files" multiple>
                                    </span>
                                </div>

                            </div>
                        </div>
                    </div>
                </div>
                <!-- /.box-footer-->
            </div>
            <!-- /.box -->
        </div>

    </div>


    @section Scripts {
        @{await Html.RenderPartialAsync("_ValidationScriptsPartial");
        }
        <script>
        var dataTable;
        var entity = 'BuildingImage'
        var apiurl = '/api/' + entity;
        var buildingId = '@Model.BuildingId';
        $(function () {

        dataTable = $('#imageGrid').DataTable({
                "ajax": {
                    "url": apiurl + '?parentId=@Model.BuildingId',
                    "type": 'GET',
                    "datatype": 'json'
                },
            "columns": [
                {
                    "data": "imageId",
                    "render": function (data) {
                        let img = "<img src='/BuildingImage/GetImage/" + data + "' onclick=ShowImg('" + data + "') />";
                        return img;
                    }
                },
                {
                    "data": "isDefault",
                    "render": function (data, type, row, meta) {
                        if (data) {
                            return "<input name='isDefault' id='" + row['imageId'] + "' type='checkbox' checked></input>"
                        } else {
                            return "<input name='isDefault' id='" + row['imageId'] + "' type='checkbox'></input>"
                        }
                    }
                },
                {
                    "data": "imageId",
                    "render": function (data) {
                        let btnDelete = "<a class='btn btn-danger btn-xs' onclick=DeleteImg('/api/" + entity + "/" + data + "')><i class='fa fa-trash'></i></a>";
                        return btnDelete;
                    }
                }
                ],
                "language": {
                    "emptyTable": "No data found."
                },
                "lengthChange": false,
                "info": false,
                "searching": false,
                "paging": false,
                "ordering": false,
            });


            });          

            $("#fileupload").change(function () {
                triggerUpload(this, buildingId);
            })

        </script>



    }
}
else
{
    @section Scripts {
        @{await Html.RenderPartialAsync("_ValidationScriptsPartial");
        }
    }
}

